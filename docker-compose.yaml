version: '3'
services:
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - ./data/elasticsearch/:/usr/share/elasticsearch/data/
    networks:
      - elastic

  # https://hub.docker.com/_/kibana
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - 5601:5601
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    links: 
      - elasticsearch
    networks:
      - elastic

  #Filebeat container
  filebeat:
    container_name: filebeat
    hostname: filebeat
    # user: root #To read the docker socket
    image: docker.elastic.co/beats/filebeat:7.6.2
    environment:
      - output.elasticsearch.hosts=elasticsearch:9200
    volumes:
      # Mount the filebeat configuration so users can make edit
      - ./config/beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      # 
      - ./data/beats/filebeat:/usr/share/filebeat/data/
      # Mount the nginx logs into the Filebeat container so we can access and index them using the Filebeat nginx module.
      - ./logs/nginx/:/var/log/nginx/
      # Mount the MySQL logs into the Filebeat container so we can access and and index them using the Filebeat MySQL module.
      - ./logs/mysql/:/var/log/mysql/
    command: filebeat -e -E output.elasticsearch.username=elastic -strict.perms=false
    networks:
      - elastic

  # # https://www.elastic.co/guide/en/logstash/current/docker-config.html
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.6.2
  #   ports:
  #     - 5044:5044
  #   volumes: 
  #     - ./logstash/config/:/usr/share/logstash/config/
  #     - ./logstash/pipeline/:/usr/share/logstash/pipeline/
  #   links: 
  #     - elasticsearch
  #     - redis
  #   networks:
  #     - elastic
  
  #nginx container
  nginx:
    build: ./config/nginx
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
    volumes:
      - ./logs/nginx/:/var/log/nginx/
    networks:
      - elastic
  
  #mysql container
  mysql:
    container_name: mysql
    hostname: mysql
    build: ./config/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - TZ='Asia/Tokyo'
    ports:
      - 3306:3306
    volumes:
      - ./logs/mysql:/var/log/mysql/
      - ./data/mysql:/var/lib/mysql/
    networks:
      - elastic

#
volumes:
  es-data:
    driver: local

# 
networks:
  elastic:
    driver: bridge


